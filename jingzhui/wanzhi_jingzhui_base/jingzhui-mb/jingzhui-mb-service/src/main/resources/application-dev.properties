# mybatis
app.mybatis.mappers=com.nebula.sequence.dal.dao,com.solar.ds.dal.dao,com.solar.ms.dal.dao,com.solar.auth.dal.dao,com.solar.mas.dal.dao,com.solar.job.dal.dao,com.solar.cms.dal.dao,com.solar.uc.dal.dao,com.solar.bi.dal.dao
app.mybatis.aliases=com.nebula.sequence.entity,com.solar.common.bean,com.solar.ds.entity,com.solar.ms.entity,com.solar.auth.entity,com.solar.mas.entity,com.solar.job.entity,com.solar.cms.entity,com.solar.uc.entity,com.solar.uc.dto,com.solar.bi.entity

# token 存储方式
security.oauth2.token.store.type=jdbc

# swagger 文档显示
swagger.show=true

# 文件存储方式 local qiniu
file.store.type=qiniu
# file local path
file.local.dir=/opt/tomcat8-8081/webapps/media
# file browser domian url
file.access.domain=http://ybl.sxracloud.com/media

# 主API接口地址
app.api.domain=http://localhost:8083
# 验证码开启状态（验证码使用Y=验证,N=不验证）
app.security-code.open=N
# 短信提供商
app.sms.provider=chuanglian

# qiniu
app.qiniu.accessKey=MICKz5OvhhGd3K5Xmr89Hsp8Ub6SpZjc2Cb31-qR
app.qiniu.secretKey=_YCn9nZDtuBPNYrURbRMpC2RoQXQ176hS7o6ydgz
app.qiniu.domain=http://larkimg.wanzhione.com
app.qiniu.bucket=tllen-lark
app.qiniu.persistentPipeline=
app.qiniu.persistentNotifyUrl=

# 学生微信小程序
wx.miniapp.configs[0].appId=wxf7079b76912e80c9
wx.miniapp.configs[0].secret=3214cdb281e172b66b374f71c2428d1d
wx.miniapp.configs[0].token=
wx.miniapp.configs[0].aesKey=
wx.miniapp.configs[0].msgDataFormat=JSON

# 平台公众号
wx.mp.configs[0].appId=wx0c190ab3d4df7524
wx.mp.configs[0].secret=bef8749d2b22ced76ec4edc11980331a
wx.mp.configs[0].token=
wx.mp.configs[0].aesKey=

# 声网
app.agoral.appId=cd32b9eba35c46a4afa6f61a99651a02
app.agoral.appCertificate=7b79c7b93b274dcf971fd3f5a1c3fd13

# 数据库配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/jingzhui?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
spring.datasource.username=root
spring.datasource.password=root
#初始化大小
spring.datasource.initial-size=5
#最小
spring.datasource.min-idle=5
#最大
spring.datasource.max-active=20
#配置获取连接等待超时的时间
spring.datasource.max-wait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.time-between-eviction-runs-millis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.min-evictable-idle-time-millis=300000
spring.datasource.validation-query=SELECT 1 FROM DUAL
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
#打开PSCache,并且指定每个连接上的PSCache的大小
spring.datasource.pool-prepared-statements=true
spring.datasource.max-pool-prepared-statement-per-connection-size=20
#配置监控统计拦截的filters,去掉后监控界面sql无法统计 wall用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.use-global-datasource-stat=true